import textwrap

def menu():
    opcoes = """
    ================ MENU ================
    [d] Depositar
    [s] Sacar
    [e] Extrato
    [nc] Nova conta
    [lc] Listar contas
    [nu] Novo usuário
    [q] Sair
    Escolha uma opção: """
    return input(textwrap.dedent(opcoes))

def depositar(saldo, valor):
    if valor > 0:
        saldo += valor
        print("\n=== Depósito realizado com sucesso! ===")
        return f"Depósito:\tR$ {valor:.2f}\n", saldo
    else:
        print("\n@@@ Operação falhou! O valor informado é inválido. @@@")
        return "", saldo

def sacar(saldo, valor, limite, numero_saques, limite_saques):
    if valor <= 0:
        print("\n@@@ Operação falhou! O valor informado é inválido. @@@")
        return "", saldo, numero_saques
    if valor > saldo:
        print("\n@@@ Operação falhou! Você não tem saldo suficiente. @@@")
        return "", saldo, numero_saques
    if valor > limite:
        print("\n@@@ Operação falhou! O valor do saque excede o limite. @@@")
        return "", saldo, numero_saques
    if numero_saques >= limite_saques:
        print("\n@@@ Operação falhou! Número máximo de saques excedido. @@@")
        return "", saldo, numero_saques

    saldo -= valor
    numero_saques += 1
    print("\n=== Saque realizado com sucesso! ===")
    return f"Saque:\t\tR$ {valor:.2f}\n", saldo, numero_saques

def exibir_extrato(extrato, saldo):
    print("\n================ EXTRATO ================")
    print(extrato or "Não foram realizadas movimentações.")
    print(f"Saldo:\t\tR$ {saldo:.2f}")
    print("==========================================")

# As funções criar_usuario, filtrar_usuario e criar_conta permanecem as mesmas.

def criar_usuario(usuarios):
    cpf = input("Informe o CPF (somente número): ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\n@@@ Já existe usuário com esse CPF! @@@")
        return

    nome = input("Informe o nome completo: ")
    data_nascimento = input("Informe a data de nascimento (dd-mm-aaaa): ")
    endereco = input("Informe o endereço (logradouro, nro - bairro - cidade/sigla estado): ")

    usuarios.append({"nome": nome, "data_nascimento": data_nascimento, "cpf": cpf, "endereco": endereco})

    print("=== Usuário criado com sucesso! ===")


def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None


def criar_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o CPF do usuário: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\n=== Conta criada com sucesso! ===")
        return {"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario}

    print("\n@@@ Usuário não encontrado, fluxo de criação de conta encerrado! @@@")

def listar_contas(contas):
    print("=" * 100)
    for conta in contas:
        print(textwrap.dedent(f"""
            Agência:\t{conta['agencia']}
            C/C:\t\t{conta['numero_conta']}
            Titular:\t{conta['usuario']['nome']}
        """))
    print("=" * 100)

def main():
    LIMITE_SAQUES = 3
    AGENCIA = "0001"
    saldo = 0
    limite = 500
    extrato = ""
    numero_saques = 0
    usuarios = []
    contas = []

    while True:
        opcao = menu()

        if opcao == "d":
            valor = float(input("Informe o valor do depósito: "))
            registro, saldo = depositar(saldo, valor)
            extrato += registro

        elif opcao == "s":
            valor = float(input("Informe o valor do saque: "))
            registro, saldo, numero_saques = sacar(saldo, valor, limite, numero_saques, LIMITE_SAQUES)
            extrato += registro

        elif opcao == "e":
            exibir_extrato(extrato, saldo)

        elif opcao == "nu":
            criar_usuario(usuarios)

        elif opcao == "nc":
            numero_conta = input("Informe o número da conta: ")
            conta = criar_conta(AGENCIA, numero_conta, usuarios)
            if conta:
                contas.append(conta)

        elif opcao == "lc":
            listar_contas(contas)

        elif opcao == "q":
            break

if __name__ == "__main__":
    main()
